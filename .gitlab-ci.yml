stages:
  - cpplint
  - pycodestyle
  - benchmark

cpplint:
  stage: cpplint
  script:
    - cpplint --linelength=80 --counting=detailed $(find aibench -name "*.h" -or -name "*.cc")

pycodestyle:
  stage: pycodestyle
  script:
    - pycodestyle $(find aibench/python -name "*.py")

benchmark:
  stage: benchmark
  script:
    - set -x
    - pwd
    - ifconfig
    - DATE_STR=`date "+%Y_%m_%d"`
    - CI_PROJECT_OUTPUT_PATH=/mace-build-output/$CI_PROJECT_NAME/${DATE_STR}_${CI_PIPELINE_ID}
    - mkdir -p $CI_PROJECT_OUTPUT_PATH
    - ANDROID_NDK_HOME=/opt/android-ndk-r17b/
    - DAY_OF_WEEK=`date +%u`
    - >
      git clone git@v9.git.n.xiaomi.com:deep-computing/generic-mobile-devices.git;
      if [ $DAY_OF_WEEK -lt 6 ]; then
        bash tools/benchmark.sh --output_dir=$CI_PROJECT_OUTPUT_PATH --benchmark_option=Precision --target_abis=armeabi-v7a,arm64-v8a,aarch64,armhf --max_time_per_lock=30 --executors=MACE,SNPE --input_dir=http --num_targets=1;
        bash tools/benchmark.sh --output_dir=$CI_PROJECT_OUTPUT_PATH --target_abis=armeabi-v7a,arm64-v8a,aarch64,armhf --max_time_per_lock=30 --num_targets=1;
      else
        bash tools/benchmark.sh --output_dir=$CI_PROJECT_OUTPUT_PATH --benchmark_option=Precision --target_abis=armeabi-v7a,arm64-v8a,aarch64,armhf --max_time_per_lock=30 --executors=MACE,SNPE --input_dir=http --all_devices_at_once;
        bash tools/benchmark.sh --output_dir=$CI_PROJECT_OUTPUT_PATH --target_abis=armeabi-v7a,arm64-v8a,aarch64,armhf --max_time_per_lock=30 --all_devices_at_once;
      fi
    - >
      cp $CI_PROJECT_OUTPUT_PATH/*_report.csv .;
      echo "------------------------------------------------------------------";
      echo "Prepare Time (see FAQ section in README for more explanations)";
      echo "------------------------------------------------------------------";
      python -c 'import prettytable,sys;print(prettytable.from_csv(sys.stdin));'<prepare_report.csv;
      echo "------------------------------------------------------------------";
      echo "Run Time Average (See FAQ section in README for more explanations)";
      echo "------------------------------------------------------------------";
      python -c 'import prettytable,sys;print(prettytable.from_csv(sys.stdin));'<run_report.csv;
      echo "------------------------------------------------------------------";
      echo "ImageNet Precision (see FAQ section in README for more explanations)";
      echo "------------------------------------------------------------------";
      python -c 'import prettytable,sys;print(prettytable.from_csv(sys.stdin));'<precision_report.csv;
  artifacts:
      paths:
        - prepare_report.csv
        - run_report.csv
        - precision_report.csv
